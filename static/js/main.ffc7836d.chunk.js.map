{"version":3,"sources":["components/Admin.js","components/Controls.js","components/data.js","components/ProgressBar.js","components/Countdown.js","components/Footer.js","components/Header.js","components/SectionList.js","components/socket.js","components/App.js","index.js"],"names":["Admin","props","useState","isOpen","setIsOpen","className","onClick","prev","icon","faAngleUp","faAngleDown","name","type","checked","control","onChange","controlHandler","connection","faQuestionCircle","Controls","tag","playText","faPlay","stopText","faPause","btnHandler","id","isPlaying","data","cycle","duration","section","ProgressBar","style","width","percent","Countdown","curSection","Math","trunc","timer","Footer","href","target","rel","faGithub","Header","faStopwatch","SectionList","sections","map","classes","data-id","faStop","socket","io","App","setIsPlaying","setTimer","setPercent","setCurSection","Date","startTime","setStartTime","setControl","setConnection","isSolo","setIsSolo","startSection","server","stop","handleInput","event","btnSection","classList","contains","dataset","emit","updateTimer","length","elapsed","countdown","tempTime","setTime","getTime","useEffect","on","res","interval","setInterval","clearInterval","solo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffc7836d.chunk.js","sourcesContent":["/**\r\n * Displays the admin component.\r\n */\r\n\r\nimport React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestionCircle, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Admin = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <header>\r\n        <button className=\"admin-toggle-btn\" onClick={() => setIsOpen(prev => !prev)}>\r\n          <span>Admin</span>\r\n          {\r\n            isOpen ? \r\n            <FontAwesomeIcon icon={faAngleUp} />\r\n            :\r\n            <FontAwesomeIcon icon={faAngleDown} />\r\n          }\r\n        </button>\r\n      </header>\r\n      {\r\n        isOpen &&\r\n        <div>\r\n          <label>\r\n            <input \r\n              name=\"client-control\" \r\n              type=\"checkbox\"\r\n              checked={props.control}\r\n              onChange={props.controlHandler}  \r\n            />\r\n            Control all clients?\r\n          </label>\r\n          <p className=\"clients\">{props.connection}</p>\r\n          <p className=\"what\"><FontAwesomeIcon icon={faQuestionCircle} className=\"icon\"/>What is this?</p>\r\n          <p>Each musician should open this webpage on a device. One musician will check the box above, and when they hit \"Start\", each user's timer will begin synchronously*. You can test this by opening the app in multiple windows or on multiple devices.</p>\r\n          <p className=\"footnote\">* Within some milliseconds. The delay ultimately depends on your internet connection.</p>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin","/**\r\n * Contains the main start/stop button.\r\n */\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Controls(props) {\r\n  const tag = props.control === true ? \" All\" : \"\"\r\n  const playText = <><FontAwesomeIcon icon={faPlay} className=\"icon\" />&nbsp;&nbsp;&nbsp;Start {tag}</>\r\n  const stopText = <><FontAwesomeIcon icon={faPause} className=\"icon\" />&nbsp;&nbsp;&nbsp;Stop {tag}</>\r\n\r\n  return (\r\n    <div className={ props.control === true ? \"controls all\" : \"controls\"}>\r\n      <button \r\n        onClick={props.btnHandler} \r\n        id=\"local\"\r\n      >\r\n        {props.isPlaying ? stopText : playText} \r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls","/**\r\n * Contains data for \"Annular Fusion\". The piece\r\n * is written in cycles, which is why it contains\r\n * a cycle property.\r\n * \r\n * cycle: [cycle number]\r\n * duration: [duration in seconds]\r\n * id: [determines the order]\r\n * section: [section name]\r\n */\r\n\r\nconst data = [\r\n  {\r\n    cycle: 0,\r\n    duration: 10,\r\n    id: 0,\r\n    section: \"Countdown\",\r\n  },\r\n  {\r\n    cycle: 1,\r\n    duration: 30,\r\n    id: 1,\r\n    section: \"Ascent\",\r\n  },\r\n  {\r\n    cycle: 1,\r\n    duration: 20,\r\n    id: 2,\r\n    section: \"Soaring\",\r\n  },\r\n  {\r\n    cycle: 1,\r\n    duration: 30,\r\n    id: 3,\r\n    section: \"Descent\",\r\n  },\r\n  {\r\n    cycle: 1,\r\n    duration: 20,\r\n    id: 4,\r\n    section: \"Lament\",\r\n  },\r\n  {\r\n    cycle: 2,\r\n    duration: 20,\r\n    id: 5,\r\n    section: \"Ascent\",\r\n  },\r\n  {\r\n    cycle: 2,\r\n    duration: 15,\r\n    id: 6,\r\n    section: \"Soaring\",\r\n  },\r\n  {\r\n    cycle: 2,\r\n    duration: 20,\r\n    id: 7,\r\n    section: \"Descent\",\r\n  },\r\n  {\r\n    cycle: 2,\r\n    duration: 15,\r\n    id: 8,\r\n    section: \"Lament\",\r\n  },\r\n  {\r\n    cycle: 3,\r\n    duration: 10,\r\n    id: 9,\r\n    section: \"Ascent\",\r\n  },\r\n  {\r\n    cycle: 3,\r\n    duration: 5,\r\n    id: 10,\r\n    section: \"Soaring\",\r\n  },\r\n  {\r\n    cycle: 3,\r\n    duration: 10,\r\n    id: 11,\r\n    section: \"Descent\",\r\n  },\r\n  {\r\n    cycle: 3,\r\n    duration: 5,\r\n    id: 12,\r\n    section: \"Lament\",\r\n  },\r\n  {\r\n    cycle: 4,\r\n    duration: 5,\r\n    id: 13,\r\n    section: \"Ascent\",\r\n  },\r\n  {\r\n    cycle: 4,\r\n    duration: 2,\r\n    id: 14,\r\n    section: \"Soaring\",\r\n  },\r\n  {\r\n    cycle: 4,\r\n    duration: 5,\r\n    id: 15,\r\n    section: \"Descent\",\r\n  },\r\n  {\r\n    cycle: 4,\r\n    duration: 2,\r\n    id: 16,\r\n    section: \"Lament\",\r\n  },\r\n  {\r\n    cycle: 5,\r\n    duration: 3,\r\n    id: 17,\r\n    section: \"Ascent\",\r\n  },\r\n  {\r\n    cycle: 5,\r\n    duration: 1,\r\n    id: 18,\r\n    section: \"Soaring\",\r\n  },\r\n  {\r\n    cycle: 6,\r\n    duration: 2,\r\n    id: 19,\r\n    section: \"*Ascent*\",\r\n  },\r\n]\r\n\r\nexport default data","/**\r\n * Displays the progress bar.\r\n */\r\n\r\nimport React from 'react'\r\n\r\nfunction ProgressBar(props) {\r\n  return (\r\n    <div className=\"progress_container\">\r\n      <div \r\n        id=\"progress-bar\" \r\n        className=\"progress\"\r\n        style={{ width: props.percent * 100 + \"%\" }}\r\n      > \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressBar","/**\r\n * Displays the progress bar as well as the \r\n * information around it.\r\n */\r\n\r\nimport React from 'react'\r\nimport data from './data'\r\nimport ProgressBar from './ProgressBar'\r\n\r\nfunction Countdown(props) {\r\n  return (\r\n    <div className=\"countdown\">\r\n      <p className=\"timer\">\r\n        {\r\n          data[props.curSection] ?\r\n          <>{Math.trunc(props.timer * 10) / 10} seconds</>\r\n          :\r\n          <>&nbsp;</>\r\n        }\r\n      </p>\r\n      <ProgressBar percent={props.percent}/>\r\n      <p className=\"section-title\">\r\n        {\r\n          data[props.curSection] &&\r\n          <>\r\n            <span className=\"light\">Now:</span> <b>{data[props.curSection]?.section}&nbsp;\r\n            {data[props.curSection]?.cycle}&nbsp;\r\n            ({data[props.curSection]?.duration}\")</b>\r\n          </>\r\n        }\r\n        \r\n      </p>\r\n      <p className=\"section-next\">\r\n        {\r\n          data[props.curSection+1] &&\r\n          <>\r\n            <span className=\"light\">Next:</span> <b>{data[props.curSection+1]?.section}&nbsp;\r\n            {data[props.curSection+1]?.cycle}&nbsp;\r\n            ({data[props.curSection+1]?.duration}\")</b>\r\n          </>\r\n        }\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countdown","/**\r\n * Displays the footer.\r\n */\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub  } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"links\">\r\n        <a href=\"https://github.com/aviolin/annular-fusion\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} className=\"icon\" />View the source on Github</a>\r\n      </div>\r\n      <p className=\"copyright\">&copy; Arlo Adams, 2021</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","/**\r\n * Displays the header.\r\n */\r\n\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStopwatch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"nav\">\r\n      <div className=\"logo\">\r\n        <FontAwesomeIcon icon={faStopwatch} className=\"icon\" />\r\n        Synch Timer\r\n      </div>\r\n      <div></div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","/**\r\n * Creates and displays a list of all the sections\r\n * the timer will count down.\r\n */\r\n\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faStop } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport data from './data'\r\n\r\nconst SectionList = (props) => {\r\n  const sections = data.map(section => {\r\n    let classes = \"list-btn \"\r\n    if (props.curSection === section.id) {\r\n      classes += \"current\"\r\n    }\r\n    if (props.curSection > section.id) {\r\n      classes += \"completed\"\r\n    }\r\n    return (\r\n      <li key={section.id}>\r\n        <button \r\n          className={classes} \r\n          onClick={props.btnHandler}\r\n          data-id={section.id}\r\n        >\r\n          <div className=\"no-pointer-events\">\r\n            <span className=\"circle\"></span>\r\n            {section.section}&nbsp;\r\n            {section.cycle}&nbsp;\r\n            <span className=\"light\">({section.duration}\")</span>\r\n          </div>\r\n          {\r\n            props.curSection === section.id && props.isPlaying ?\r\n            <FontAwesomeIcon icon={faStop} className=\"no-pointer-events\" />\r\n            :\r\n            <FontAwesomeIcon icon={faPlay} className=\"no-pointer-events\" />\r\n          }\r\n        </button>\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"section-list\">\r\n      <ul>\r\n        { sections }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionList","/**\r\n * Socket component to connect to the websocket server.\r\n */\r\n\r\nimport io from 'socket.io-client'\r\n//const ENDPOINT = 'http://127.0.0.1:4001'\r\nconst ENDPOINT = \"https://pacific-beyond-27860.herokuapp.com/\"\r\nexport const socket = io(ENDPOINT)","/**\r\n * Contains logic for controlling the timers, and\r\n * acts as a wrapper for the rest of the components\r\n * in the app.\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport Admin from './Admin'\r\nimport Controls from './Controls'\r\nimport Countdown from './Countdown'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\nimport SectionList from './SectionList'\r\nimport { socket } from './socket'\r\n\r\nimport '../styles/normalize.css'\r\nimport '../styles/main.css'\r\n\r\nimport data from './data'\r\n\r\nfunction App() {\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const [timer, setTimer] = useState(data[0].duration)\r\n  const [percent, setPercent] = useState(0)\r\n  const [curSection, setCurSection] = useState(-1)\r\n  const [startTime, setStartTime] = useState(new Date())\r\n  const [control, setControl] = useState(false)\r\n  const [connection, setConnection] = useState(\"Not connected to server.\")\r\n  const [isSolo, setIsSolo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"Hello\", (res) => setConnection(res + \" client(s) connected to server.\"))\r\n    socket.on(\"Start\", (res) => startSection(res, true))\r\n    socket.on(\"Stop\", () => stop(true))\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    const interval = setInterval(updateTimer, 33)\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  })\r\n\r\n  function startSection(section, server=false) {\r\n    if (server) {\r\n      if (isSolo) return\r\n    }\r\n\r\n    setTimer(data[section].duration)\r\n    setPercent(0)\r\n    setCurSection(section)\r\n    setStartTime(new Date())\r\n    setIsPlaying(true)\r\n  }\r\n\r\n  function stop(server=false) {\r\n    if (server) {\r\n      if (isSolo) return\r\n    }\r\n\r\n    setTimer(data[0].duration)\r\n    setPercent(0)\r\n    setCurSection(-1)\r\n    setStartTime(new Date())\r\n    setIsPlaying(false)\r\n  }\r\n\r\n  function handleInput(event) {\r\n    if (event.target.type === \"checkbox\") {\r\n      if (event.target.name === \"client-control\") {\r\n        setControl(!control)\r\n      } else if (event.target.name === \"solo-control\") {\r\n        setIsSolo(!isSolo)\r\n      }\r\n      return\r\n    }\r\n\r\n    let btnSection = 0\r\n    if (event.target.classList.contains('list-btn')) {\r\n      btnSection = +event.target.dataset.id\r\n      if (btnSection === curSection && isPlaying) {\r\n        if (control) {\r\n          socket.emit(\"Stop\")\r\n          return\r\n        }\r\n\r\n        setIsPlaying(false)\r\n        return\r\n      }\r\n\r\n      if (control) {\r\n        socket.emit(\"Start\", btnSection)\r\n        return\r\n      }\r\n\r\n      startSection(btnSection)\r\n      return\r\n    }\r\n\r\n    if (control) {\r\n      isPlaying ? socket.emit(\"Stop\") \r\n                : socket.emit(\"Start\", btnSection)\r\n      return\r\n    }\r\n\r\n    isPlaying ? setIsPlaying(false)\r\n              : startSection(btnSection)\r\n  }\r\n\r\n  function updateTimer() {\r\n    if (!isPlaying || curSection >= data.length) {\r\n      stop()\r\n      return\r\n    }\r\n\r\n    const now = new Date()\r\n    const elapsed = now - startTime\r\n    let countdown = data[curSection].duration - (elapsed/1000)\r\n    \r\n    if (countdown <= 0) {\r\n      setCurSection(curSection + 1)\r\n      let tempTime = startTime\r\n      tempTime.setTime(tempTime.getTime() + (data[curSection].duration * 1000))\r\n      setStartTime(tempTime)\r\n      countdown += data[curSection].duration\r\n    }\r\n\r\n    setPercent(elapsed / (data[curSection].duration * 1000))\r\n    setTimer(countdown)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <h1>Annular Fusion</h1>\r\n      <Countdown \r\n        isPlaying={isPlaying} \r\n        isSolo={isSolo}\r\n        curSection={curSection}\r\n        timer={timer}\r\n        percent={percent}\r\n      />\r\n      <Controls \r\n        isPlaying={isPlaying} \r\n        btnHandler={handleInput} \r\n        control={control}\r\n      />\r\n      <SectionList \r\n        btnHandler={handleInput}\r\n        curSection={curSection}\r\n        isPlaying={isPlaying}\r\n      />\r\n      <Admin \r\n        control={control}\r\n        solo={isSolo}\r\n        controlHandler={handleInput}\r\n        connection={connection} \r\n      />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}